#!/bin/bash

# prida prvek na zacatek pole
# pokud prvek pole jiz obsahuje, presune jej na zacatek
# Prvnim argumentem je jmeno pole, dale jsou pridavane argumenty ve stylu fronty
array_prepend () {
	# kontrola spravneho zadani argumentu
	if [ $# -lt 2 ]; then
		echo "array_prepend(): Error: wrong number of arguments. Use: array_prepend Array newElement [newElements ...]"
		exit 2;
	fi

	# vytvoreni reference
	typeset -n ref="$1"
	shift

	for new; do
	length="${#ref[@]}"
		# predane pole je prazdne
		if [ $length -eq 0 ]; then
			ref[0]="$new"
			((length++));
			continue
		fi

		prev="$new"
		((length++));
		for (( x=0; x < length; x++ )) {
		# u prvku pole zkontroluj, ze nejsou stejne jako pridavany prvek
		# pokud jsou stejne, prvek nahrad, sniz velikost pole a ukonci beh
		# jinak postupne nahrazovanim posunuj prvky
		curr="${ref[x]}"
		ref[x]="$prev"
		if [ "$new" = "$curr" ]; then
			((length--))
			break;		
		fi
		prev="$curr"
		}
	done;
}

echo "----- prepend -----"
POLE=(a b c 1 3 5 7 9)
plus=(v a e c a a a)
echo "pole pred prepend: (${POLE[@]})"
echo "pridavam: ${plus[@]}"
array_prepend POLE ${plus[@]}
echo "pole po prepend: (${POLE[@]})"
# -> a c e v b c 1 3 5 7 9

echo "--- prazdne pole ---"
POLE2=()
echo "pole pred prepend: (${POLE2[@]})"
echo "pridavam: ${plus[@]}"
array_prepend POLE2 ${plus[@]}
echo "pole po prepend: (${POLE2[@]})"
# -> a c e v